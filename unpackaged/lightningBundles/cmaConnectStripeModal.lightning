<?xml version="1.0" encoding="UTF-8"?>
<LightningBundle xmlns="http://soap.sforce.com/2006/04/metadata">
	<manifest_file>
		<manifest_name>cmaConnectStripeModal.cmp</manifest_name>
		<manifest_text>&lt;!--
    Copyright (c) 2016 Salesforce
    @author v.nessi@salesforce.com
--&gt;
&lt;aura:component controller=&quot;sfcma.ConnectStripeController&quot;&gt;

    &lt;aura:attribute name=&quot;errorMessage&quot; type=&quot;String&quot; /&gt;

    &lt;aura:registerEvent name=&quot;openWizardModalEvent&quot; type=&quot;sfcma:cmaOpenWizardModal&quot;/&gt;
    &lt;div aria-hidden=&quot;true&quot; role=&quot;dialog&quot; class=&quot;slds-modal--large slds-modal slds-fade-in-open &quot;&gt;
        &lt;div class=&quot;slds-modal__container cma-modal-width&quot;&gt;
            &lt;div class=&quot;slds-modal__header&quot;&gt;

                &lt;div class=&quot;slds-hide slds-notify-container&quot; aura:id=&quot;connectWithStripeError&quot;&gt;
                    &lt;div class=&quot;slds-notify slds-notify--toast slds-theme--error&quot; role=&quot;alert&quot;&gt;
                        &lt;span class=&quot;slds-assistive-text&quot;&gt;{!$Label.sfcma.cma_error}&lt;/span&gt;
                        &lt;button class=&quot;slds-button slds-button--icon-inverse slds-notify__close&quot; onclick=&quot;{!c.closeError}&quot;&gt;
                            &lt;sfcma:svg ariaHidden=&quot;true&quot; class=&quot;slds-button__icon slds-button__icon--large&quot; xlinkHref=&quot;/resource/sfcma__SLDS/assets/icons/utility-sprite/svg/symbols.svg#close&quot;/&gt;
                            &lt;span class=&quot;slds-assistive-text&quot;&gt;{!$Label.sfcma.cma_close}&lt;/span&gt;
                        &lt;/button&gt;
                        &lt;div class=&quot;notify__content slds-grid&quot;&gt;
                            &lt;sfcma:svg ariaHidden=&quot;true&quot; class=&quot;slds-icon slds-icon--small slds-m-right--small slds-col slds-no-flex&quot; xlinkHref=&quot;/resource/sfcma__SLDS/assets/icons/utility-sprite/svg/symbols.svg#warning&quot;/&gt;
                            &lt;div class=&quot;slds-col slds-align-middle&quot;&gt;
                                &lt;h2 class=&quot;slds-text-heading--small&quot;&gt;{!v.errorMessage}&lt;/h2&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;h2 class=&quot;slds-text-heading--medium&quot;&gt;{!$Label.sfcma.cma_connect_stripe_account_button_label}&lt;/h2&gt;

                &lt;button class=&quot;slds-button slds-button--icon-inverse slds-modal__close&quot; onclick=&quot;{!c.closeModal}&quot;&gt;
                    &lt;sfcma:svg ariaHidden=&quot;true&quot; class=&quot;slds-button__icon slds-button__icon--large&quot; xlinkHref=&quot;/resource/sfcma__SLDS/assets/icons/utility-sprite/svg/symbols.svg#close&quot;/&gt;

                    &lt;span class=&quot;slds-assistive-text&quot;&gt;{!$Label.sfcma.cma_close}&lt;/span&gt;
                &lt;/button&gt;
            &lt;/div&gt;
            &lt;div class=&quot;slds-modal__content slds-p-right--xx-large slds-p-left--xx-large slds-p-bottom--x-large slds-p-top--large&quot;&gt;
                &lt;div&gt;
                    &lt;p&gt;{!$Label.sfcma.cma_connect_stripe_account_modal_description}&lt;/p&gt;&lt;br&gt;&lt;/br&gt;
                    &lt;div class=&quot;slds-form-element&quot;&gt;
                        &lt;div class=&quot;slds-form-element__label&quot;&gt;
                            &lt;label for=&quot;stripeAPIKey&quot;&gt;{!$Label.sfcma.cma_live_api_key}&lt;/label&gt;
                        &lt;/div&gt;
                        &lt;div class=&quot;slds-form-element__control&quot;&gt;
                            &lt;input class=&quot;slds-input&quot; aura:id=&quot;stripeAPIKey&quot; aria-describedby=&quot;apiKeyHelp&quot;/&gt;
                            &lt;div class=&quot;slds-text-body--small&quot; style=&quot;font-size: 0.7rem;&quot;&gt;
                                &lt;a href=&quot;https://dashboard.stripe.com/account/apikeys&quot; target=&quot;_blank&quot;&gt;
                                    {!$Label.sfcma.cma_get_api_key_link_text}
                                &lt;/a&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class=&quot;slds-modal__footer&quot;&gt;
                &lt;div class=&quot;slds-x-small-buttons--horizontal&quot;&gt;
                    &lt;button class=&quot;slds-button slds-button--neutral&quot; onclick=&quot;{!c.closeModal}&quot;&gt;{!$Label.sfcma.cma_logo_modal_cancel}&lt;/button&gt;
                    &lt;button class=&quot;slds-button slds-button--neutral slds-button--brand&quot; onclick=&quot;{!c.validateAPIKey}&quot;&gt;{!$Label.sfcma.cma_connect_stripe_account_button_label}&lt;/button&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;slds-backdrop slds-backdrop--open&quot;&gt;&lt;/div&gt;

&lt;/aura:component&gt;</manifest_text>
	</manifest_file>
	<manifest_file>
		<manifest_name>cmaConnectStripeModal.cmp-meta.xml</manifest_name>
		<manifest_xml>
			<?xml version="1.0" encoding="UTF-8"?>
			<AuraDefinitionBundle xmlns="http://soap.sforce.com/2006/04/metadata">
				<apiVersion>34.0</apiVersion>
				<description>Connect to Stripe Modal</description>
			</AuraDefinitionBundle>
		</manifest_xml>
	</manifest_file>
	<manifest_file>
		<manifest_name>cmaConnectStripeModal.css</manifest_name>
		<manifest_text>.THIS .cma-modal-width {
	max-width: 800px !important;
}</manifest_text>
	</manifest_file>
	<manifest_file>
		<manifest_name>cmaConnectStripeModalController.js</manifest_name>
		<manifest_text>/**
 * Copyright (c) 2016 Salesforce
 * @author v.nessi@salesforce.com
 */
({
	validateAPIKey : function(component, event, helper) {
		helper.closeError(component);
		var stripeAPIKeyCmp = component.find(&quot;stripeAPIKey&quot;);
    	var stripeAPIKeyValue = stripeAPIKeyCmp.getElement().value;
		var action = component.get(&quot;c.connectStripeAccount&quot;);
		action.setParams({ apiKey : stripeAPIKeyValue });
		action.setCallback(this, function(response) {
			var state = response.getState();
			if (state === &quot;SUCCESS&quot;) {
				var disconnectAccountEvent = $A.get(&quot;e.sfcma:cmaDisconnectAccountEvent&quot;);
				disconnectAccountEvent.setParams({ &quot;stepsToUncheck&quot; : [&quot;2&quot;, &quot;3&quot;] }).fire();
				var appEvent = $A.get(&quot;e.sfcma:cmaOpenWizardModal&quot;);
				appEvent.setParams({
	            	&quot;modalId&quot; : &quot;modalStep1a&quot;,
					&quot;modalIdToClose&quot; : &quot;modalStep1&quot;
			 	});
	        	appEvent.fire();
				var appEvent1 = $A.get(&quot;e.sfcma:cmaStepCompletedEvent&quot;);
				appEvent1.setParams({
					&quot;stepCompleted&quot; : &quot;1&quot;,
					&quot;data&quot; : [{username: response.getReturnValue()}]
				});
				appEvent1.fire();
				helper.emptyStripeSecretKeyValue(component);
			} else if (state === &quot;ERROR&quot;) {
				var errors = response.getError();
				if(errors) {
					component.set(&quot;v.errorMessage&quot;, errors[0].message);
					var cmpTarget = component.find(&apos;connectWithStripeError&apos;);
					$A.util.removeClass(cmpTarget, &apos;slds-hide&apos;);
				}
			}
		});
		$A.enqueueAction(action);
	},

	closeError : function(component, event, helper) {
		helper.closeError(component);
	},

	closeModal : function(component, event, helper) {
		helper.closeError(component);
		helper.emptyStripeSecretKeyValue(component);
		var appEvent = $A.get(&quot;e.sfcma:cmaOpenWizardModal&quot;);
		appEvent.setParams({
			&quot;modalIdToClose&quot; : &quot;modalStep1&quot;
		});
		appEvent.fire();
	}
})</manifest_text>
	</manifest_file>
	<manifest_file>
		<manifest_name>cmaConnectStripeModalHelper.js</manifest_name>
		<manifest_text>({
	closeError : function(component) {
		var cmpTarget = component.find(&apos;connectWithStripeError&apos;);
		$A.util.addClass(cmpTarget, &apos;slds-hide&apos;);
	},

	emptyStripeSecretKeyValue : function(component) {
		component.find(&apos;stripeAPIKey&apos;).getElement().value = &apos;&apos;;
	}
})</manifest_text>
	</manifest_file>
</LightningBundle>
